[Tests]
  design = 'INSFVScalarFieldAdvection.md'
  issues = '#28891'
  [bottom_left_limited_scalar_advection]
    requirement = 'The system shall be able to perform a variety of limiting schemes when solving scalar transport equations in cartesian meshes with bottom-left advection. These schemes include'
    [sou]
      type = Exodiff
      input = 'bottom_left_advection.i'
      exodiff = bottom_left_sou.e
      cli_args = 'GlobalParams/advected_interp_method=sou Outputs/file_base=bottom_left_sou'
      abs_zero = 1e-4
      detail = 'second-order upwind'
    []
    [vanLeer]
      type = Exodiff
      input = 'bottom_left_advection.i'
      exodiff = bottom_left_vanLeer.e
      cli_args = 'GlobalParams/advected_interp_method=vanLeer Outputs/file_base=bottom_left_vanLeer'
      abs_zero = 1e-4
      detail = 'van Leer'
    []
    [min_mod]
      type = Exodiff
      input = 'bottom_left_advection.i'
      exodiff = bottom_left_min_mod.e
      cli_args = 'GlobalParams/advected_interp_method=min_mod Outputs/file_base=bottom_left_min_mod'
      abs_zero = 1e-4
      detail = 'min-mod'
    []
    [quick]
      type = Exodiff
      input = 'bottom_left_advection.i'
      exodiff = bottom_left_quick.e
      cli_args = 'GlobalParams/advected_interp_method=quick Outputs/file_base=bottom_left_quick'
      abs_zero = 1e-4
      detail = 'QUICK'
    []
    [venkatakrishnan]
      type = Exodiff
      input = 'bottom_left_advection.i'
      exodiff = bottom_left_venkatakrishnan.e
      cli_args = 'GlobalParams/advected_interp_method=venkatakrishnan Outputs/file_base=bottom_left_venkatakrishnan'
      abs_zero = 1e-4
      detail = 'venkatakrishnan'
    []
  []
  [top_right_limited_scalar_advection]
    requirement = 'The system shall be able to perform a variety of limiting schemes when solving scalar transport equations in cartesian meshes with top-right advection. These schemes include'
    [sou]
      type = Exodiff
      input = 'top_right_advection.i'
      exodiff = top_right_sou.e
      cli_args = 'GlobalParams/advected_interp_method=sou Outputs/file_base=top_right_sou'
      abs_zero = 1e-4
      detail = 'second-order upwind'
    []
    [vanLeer]
      type = Exodiff
      input = 'top_right_advection.i'
      exodiff = top_right_vanLeer.e
      cli_args = 'GlobalParams/advected_interp_method=vanLeer Outputs/file_base=top_right_vanLeer'
      abs_zero = 1e-4
      detail = 'van Leer'
    []
    [min_mod]
      type = Exodiff
      input = 'top_right_advection.i'
      exodiff = top_right_min_mod.e
      cli_args = 'GlobalParams/advected_interp_method=min_mod Outputs/file_base=top_right_min_mod'
      abs_zero = 1e-4
      detail = 'min-mod'
    []
    [quick]
      type = Exodiff
      input = 'top_right_advection.i'
      exodiff = top_right_quick.e
      cli_args = 'GlobalParams/advected_interp_method=quick Outputs/file_base=top_right_quick'
      abs_zero = 1e-4
      detail = 'QUICK'
    []
    [venkatakrishnan]
      type = Exodiff
      input = 'top_right_advection.i'
      exodiff = top_right_venkatakrishnan.e
      cli_args = 'GlobalParams/advected_interp_method=venkatakrishnan Outputs/file_base=top_right_venkatakrishnan'
      abs_zero = 1e-4
      detail = 'venkatakrishnan'
    []
  []
  [bottom_left_tri_mesh_limited_scalar_advection]
    requirement = 'The system shall be able to perform a variety of limiting schemes when solving scalar transport equations in triangular meshes with bottom-left advection. These schemes include'
    [vanLeer]
      type = Exodiff
      input = 'bottom_left_tri_mesh_advection.i'
      exodiff = bottom_left_tri_mesh_vanLeer.e
      cli_args = 'GlobalParams/advected_interp_method=vanLeer Outputs/file_base=bottom_left_tri_mesh_vanLeer'
      abs_zero = 1e-4
      detail = 'van Leer'
    []
    [min_mod]
      type = Exodiff
      input = 'bottom_left_tri_mesh_advection.i'
      exodiff = bottom_left_tri_mesh_min_mod.e
      cli_args = 'GlobalParams/advected_interp_method=min_mod Outputs/file_base=bottom_left_tri_mesh_min_mod'
      abs_zero = 1e-4
      detail = 'min-mod'
    []
    [quick]
      type = Exodiff
      input = 'bottom_left_tri_mesh_advection.i'
      exodiff = bottom_left_tri_mesh_quick.e
      cli_args = 'GlobalParams/advected_interp_method=quick Outputs/file_base=bottom_left_tri_mesh_quick'
      abs_zero = 1e-4
      detail = 'QUICK'
    []
  []
[]
